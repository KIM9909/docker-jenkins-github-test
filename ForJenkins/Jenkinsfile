pipeline {
    agent any

    stages {
        stage('Prepare') {
            agent any

            steps {
                checkout scm
            }

            post {
                success {
                    echo 'prepare success'
                }

                always {
                    echo 'done prepare'
                }

                cleanup {
                    echo 'after all other post conditions'
                }
            }
        }

        stage('build gradle') {
            steps {
                sh 'chmod +x gradlew'
                sh './gradlew clean build'
                sh 'ls -al ./build/libs'
            }
            post {
                success {
                    echo 'gradle build success'
                }

                failure {
                    echo 'gradle build failed'
                }
            }
        }

        stage('dockerizing'){
            steps{
                // WAR 파일을 사용하는 Tomcat 기반 Dockerfile 생성
                sh '''
                cat > Dockerfile << EOF
                FROM tomcat:9.0-jdk17
                COPY build/libs/*.war /usr/local/tomcat/webapps/ROOT.war
                EXPOSE 8080
                CMD ["catalina.sh", "run"]
                EOF
                '''
                // Docker 이미지 빌드
                sh 'docker build . -t mooh2jj/docker-jenkins-github-test'
            }
        }

        stage('Deploy') {
            steps {
                // 기존 컨테이너 중지 (실패해도 계속 진행)
                sh 'docker rm -f docker-jenkins-github-test || true'
                
                // 기존 이미지 삭제 (실패해도 계속 진행)
                sh 'docker rmi -f mooh2jj/docker-jenkins-github-test || true'
                
                // 새 컨테이너 실행 (8080 포트를 8081로 매핑)
                sh 'docker run --name docker-jenkins-github-test -d -p 8081:8080 mooh2jj/docker-jenkins-github-test'
            }

            post {
                success {
                    echo 'deployment success'
                }

                failure {
                    echo 'deployment failed'
                }
            }
        }
    }
}